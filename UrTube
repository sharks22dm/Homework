import time


class User:
    """"Пользователь"""

    def __init__(self, nickname, password, age):
        self.nickname = str(nickname)
        self.password = str(password)
        self.age = int(age)
        self.hash_password = hash(password)


class Video:
    """"Видео"""

    def __init__(self, title, duration, time_now=0, adult_mode=False):
        self.title = str(title)
        self.duration = int(duration)
        self.time_now = int(time_now)
        self.adult_mode = bool(adult_mode)


class UrTube:
    """"Хостинг"""

    def __init__(self):
        self.users = []
        self.videos = []
        self.current_user = None

    def log_in(self, login, password):
        for user in self.users:
            if user.nickname == login:
                if user.hash_password == hash(password):
                    self.current_user = user
                    print(f'Пользователь {login} успешно вошел в систему')
                    return
                else:
                    print(f'Неверный пароль для пользователя {login}')
                    return
        print('Пользователь с таким логином не найден')

    def register(self, nickname, password, age):
        for user in self.users:
            if user.nickname == nickname:
                print(f'Пользователь {nickname} уже существует')
                return
        new_user = User(nickname, password, age)
        self.users.append(new_user)
        print(f'Пользователь {nickname} успешно зарегистрирован')
        self.current_user = new_user

    def log_out(self):
        self.current_user = None

    def add(self, *videos):
        for new_video in videos:
            if new_video.title not in [video.title for video in self.videos]:
                self.videos.append(new_video)
                print(f'Видео "{new_video.title}" успешно добавлено')
            else:
                print(f'Видео "{new_video.title}" уже существует')

    def get_videos(self, search_word):
        search_word_lower = search_word.lower()
        found_videos = [video.title for video in self.videos if search_word_lower in video.title.lower()]
        return found_videos

    def watch_video(self, video_title):
        if not self.current_user:
            print('Войдите в аккаунт чтобы смотреть видео')
            return
        found = False
        for video in self.videos:
            if video.title.lower() == video_title.lower():
                found = True
                if video.adult_mode and self.current_user.age < 18:
                    print('Вам нет 18 лет, пожалуйста покиньте страницу')
                else:
                    print(f'Воспроизведение видео "{video.title}" началось')
                    for i in range(video.duration):
                        time.sleep(1)
                        print(f'{i + 1} секунда')
                    print('Конец видео')
                break
        if not found:
            print('Видео не найдено')


ur = UrTube()
v1 = Video('Лучший язык программирования 2024 года', 200)
v2 = Video('Для чего девушкам парень программист?', 10, adult_mode=True)

# Добавление видео
ur.add(v1, v2)

# Проверка поиска
print(ur.get_videos('лучший'))
print(ur.get_videos('ПРОГ'))

# Проверка на вход пользователя и возрастное ограничение
ur.watch_video('Для чего девушкам парень программист?')
ur.register('vasya_pupkin', 'lolkekcheburek', 13)
ur.watch_video('Для чего девушкам парень программист?')
ur.register('urban_pythonist', 'iScX4vIJClb9YQavjAgF', 25)
ur.watch_video('Для чего девушкам парень программист?')

# Проверка входа в другой аккаунт
ur.register('vasya_pupkin', 'F8098FM8fjm9jmi', 55)

# Попытка воспроизведения несуществующего видео
ur.watch_video('Лучший язык программирования 2024 года!')
